//Code generated by ChatGpt

"use client";

import React, { useState } from "react";
import { useForm } from "react-hook-form";
import { useRouter } from "next/navigation";
import {
  Form,
  FormField,
  FormItem,
  FormLabel,
  FormControl,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";

const CUSTOMER_API = "https://localhost:7124/api/customer";

interface CustomerFormData {
  customerName: string; // Byt ut "name" mot "customerName"
}

export default function AddCustomerPage() {
  const router = useRouter();
  const form = useForm<CustomerFormData>({
    defaultValues: {
      customerName: "", // matchar propertyn i interfacet
    },
  });

  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const onSubmit = async (data: CustomerFormData) => {
    setLoading(true);
    setError(null);

    try {
      const response = await fetch(CUSTOMER_API, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        // Här skickas nu { "customerName": "..." } i stället för { "name": "..." }
        body: JSON.stringify(data),
      });

      if (!response.ok) {
        throw new Error("Kunde inte lägga till kund.");
      }

      router.push("/"); // Navigera dit du vill efter lyckad POST
    } catch (err) {
      console.error("❌ Fel vid skapande av kund:", err);
      setError("Ett fel inträffade vid skapandet av kunden.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <Form {...form}>
      <form
        onSubmit={form.handleSubmit(onSubmit)}
        className="space-y-4 max-w-md mx-auto p-6 bg-white shadow-md rounded-lg"
      >
        <h1 className="text-2xl font-bold mb-4">Lägg till ny kund</h1>

        {error && <p className="text-red-500">{error}</p>}

        {/* Kundnamn (nu "customerName") */}
        <FormField
          control={form.control}
          name="customerName"
          rules={{ required: "Kundnamn är obligatoriskt" }}
          render={({ field }) => (
            <FormItem>
              <FormLabel>Kundnamn</FormLabel>
              <FormControl>
                <Input placeholder="Ange kundnamn" {...field} />
              </FormControl>
              <FormMessage />
            </FormItem>
          )}
        />

        <div className="flex space-x-2">
          <Button type="submit" disabled={loading}>
            {loading ? "Lägger till..." : "Lägg till kund"}
          </Button>
          <Button variant="destructive" onClick={() => router.back()}>
            Avbryt
          </Button>
        </div>
      </form>
    </Form>
  );
}
